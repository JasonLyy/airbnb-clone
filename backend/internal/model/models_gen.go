// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type Connection interface {
	IsConnection()
}

type Edge interface {
	IsEdge()
}

type Node interface {
	IsNode()
}

type AuthPayload struct {
	AccessToken     string `json:"accessToken"`
	AccessTokenExp  int    `json:"accessTokenExp"`
	RefreshToken    string `json:"refreshToken"`
	RefreshTokenExp int    `json:"refreshTokenExp"`
}

type CredentialsInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type ListingConnection struct {
	PageInfo     *PageInfo      `json:"pageInfo"`
	Edges        []*ListingEdge `json:"edges"`
	TotalResults int            `json:"totalResults"`
}

func (ListingConnection) IsConnection() {}

type ListingEdge struct {
	Cursor string   `json:"cursor"`
	Node   *Listing `json:"node"`
}

func (ListingEdge) IsEdge() {}

type ListingsInput struct {
	Location string     `json:"location"`
	CheckIn  *time.Time `json:"checkIn"`
	CheckOut *time.Time `json:"checkOut"`
	Adults   *int       `json:"adults"`
	Children *int       `json:"children"`
	Infants  *int       `json:"infants"`
}

type LogoutPayload struct {
	Success bool `json:"success"`
}

type PageInfo struct {
	StartCursor     string `json:"startCursor"`
	EndCursor       string `json:"endCursor"`
	HasPreviousPage bool   `json:"hasPreviousPage"`
	HasNextPage     bool   `json:"hasNextPage"`
}

type PaginationInput struct {
	First *int    `json:"first"`
	After *string `json:"after"`
}
